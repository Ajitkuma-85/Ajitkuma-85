ng generate component user-input
ng generate component workout-list
ng generate component workout-chart
import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import { UserInputComponent } from './user-input/user-input.component';
import { WorkoutListComponent } from './workout-list/workout-list.component';
import { WorkoutChartComponent } from './workout-chart/workout-chart.component';

const routes: Routes = [
  { path: '', redirectTo: '/input', pathMatch: 'full' },
  { path: 'input', component: UserInputComponent },
  { path: 'list', component: WorkoutListComponent },
  { path: 'chart', component: WorkoutChartComponent } // Optional
];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule { }
<form [formGroup]="workoutForm" (ngSubmit)="onSubmit()">
  <mat-form-field>
    <mat-label>User Name</mat-label>
    <input matInput formControlName="userName">
  </mat-form-field>

  <mat-form-field>
    <mat-label>Workout Type</mat-label>
    <mat-select formControlName="workoutType">
      <mat-option *ngFor="let type of workoutTypes" [value]="type">{{ type }}</mat-option>
    </mat-select>
  </mat-form-field>

  <mat-form-field>
    <mat-label>Workout Minutes</mat-label>
    <input matInput type="number" formControlName="workoutMinutes">
  </mat-form-field>

  <button mat-raised-button color="primary" type="submit">Add Workout</button>
</form>
import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { WorkoutService } from '../workout.service';

@Component({
  selector: 'app-user-input',
  templateUrl: './user-input.component.html',
  styleUrls: ['./user-input.component.css']
})
export class UserInputComponent implements OnInit {
  workoutForm: FormGroup;
  workoutTypes: string[] = ['Running', 'Cycling', 'Swimming', 'Yoga'];

  constructor(private fb: FormBuilder, private workoutService: WorkoutService) {
    this.workoutForm = this.fb.group({
      userName: [''],
      workoutType: [''],
      workoutMinutes: ['']
    });
  }

  ngOnInit(): void { }

  onSubmit(): void {
    if (this.workoutForm.valid) {
      this.workoutService.addWorkout(this.workoutForm.value);
      this.workoutForm.reset();
    }
  }
}
<div>
  <mat-form-field>
    <mat-label>Search by Name</mat-label>
    <input matInput (input)="applyFilter($event.target.value)">
  </mat-form-field>

  <mat-form-field>
    <mat-label>Filter by Workout Type</mat-label>
    <mat-select (selectionChange)="applyFilterType($event.value)">
      <mat-option *ngFor="let type of workoutTypes" [value]="type">{{ type }}</mat-option>
    </mat-select>
  </mat-form-field>

  <table mat-table [dataSource]="filteredWorkouts" class="mat-elevation-z8">
    <!-- Columns -->
    <ng-container matColumnDef="userName">
      <th mat-header-cell *matHeaderCellDef> User Name </th>
      <td mat-cell *matCellDef="let element"> {{element.userName}} </td>
    </ng-container>

    <ng-container matColumnDef="workoutType">
      <th mat-header-cell *matHeaderCellDef> Workout Type </th>
      <td mat-cell *matCellDef="let element"> {{element.workoutType}} </td>
    </ng-container>

    <ng-container matColumnDef="workoutMinutes">
      <th mat-header-cell *matHeaderCellDef> Workout Minutes </th>
      <td mat-cell *matCellDef="let element"> {{element.workoutMinutes}} </td>
    </ng-container>

    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>
    <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>
  </table>
</div>
